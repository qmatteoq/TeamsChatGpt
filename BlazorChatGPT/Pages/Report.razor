@page "/report"

@using BlazorChatGPT.Services;
@inject IOpenAiService openAiService;

<h3>Report</h3>

<div>Choose your API service:</div>
<select name="apiService" id="apiService" @bind="@apiService">
    <option value="openai">OpenAI</option>
    <option value="azureopenai">Azure OpenAI</option>
</select>

<div>Customer:</div>
<div><textarea rows="5" cols="100" @bind="@customer" /></div>

<div>Problem:</div>
<div><textarea rows="5" cols="100" @bind="@problem" /></div>

<div>Solution:</div>
<div><textarea rows="5" cols="100" @bind="@solution" /></div>

<div>Report:</div>
<p class="markup">@((MarkupString)report)</p>

<button @onclick="() => GenerateReportAsync()">
    Send
</button>

@if (isLoading)
{
    <p>
        <strong>Waiting for a response...</strong>
    </p>
}


@code {

    private string customer;
    private string problem;
    private string solution;
    private string report;
    private string apiService;
    private bool isLoading;

    public async Task GenerateReportAsync()
    {
        if (apiService == "openai")
        {
            openAiService.UseOpenAI();
        }
        else
        {
            openAiService.UseAzureOpenAI();
        }

        isLoading = true;
        report = await openAiService.GenerateBusinessReportAsync(customer, problem, solution);
        isLoading = false;
    }
}